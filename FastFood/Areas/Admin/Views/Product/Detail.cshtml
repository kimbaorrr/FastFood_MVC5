@using FastFood.Models;
@{
    @model FastFood_SanPham_ChiTietSanPham
    string[] dsHinhAnh = ViewBag.HinhAnh as string[];
    int? maSanPham = ViewBag.MaSanPham as int?;
}


@using (Html.BeginForm("Detail", "Product", FormMethod.Post, new { area = "Admin", id = "productForm" }))
{
    @Html.AntiForgeryToken()
    @Html.TextBoxFor(m => m.MaSanPham, new { @hidden = "" })
    @Html.TextBoxFor(m => m.MaNguoiTao, new { @hidden = "" })
    <!-- Start Container Fluid -->
    <div class="container-xxl">

        <div class="row">

            <div class="col-xl-4 col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @{
                                    bool isFirst = true;
                                    foreach (var anh in dsHinhAnh)
                                    {
                                        <div class="carousel-item @(isFirst ? "active" : "")" data-bs-interval='5000'>
                                            <img src="@anh" class="d-block w-100" alt="img">
                                        </div>
                                        isFirst = false;
                                    }
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>

                    </div>
                </div>
                <div class="card mx-auto shadow-sm">
                    <div class="card-header">
                        <h4 class="card-title">Tải ảnh lên</h4>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            @{
                                foreach (var anh in dsHinhAnh)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-baseline" style="max-height: 12rem; overflow-y: auto;">
                                        <a href="@anh" class="text-blue fw-bold">
                                            @anh.Split('/').Last()
                                        </a>
                                        <button type="button" class="bg-white border-0 remove-image-btn" data-image-url="@anh" data-product-id="@maSanPham">
                                            <iconify-icon icon="streamline:delete-1-solid" class="text-danger"></iconify-icon>
                                        </button>
                                    </li>
                                }
                            }
                        </ul>
                        @Html.TextBox("HinhAnh", null, new { @class = "form-control mt-2", @multiple = "", @type = "file", id = "HinhAnh", @accept = "image/*" })
                    </div>

                </div>


            </div>
            <div class="col-xl-8 col-lg-8 ">
                <div class="card">
                    <div class="card-header d-flex justify-content-start">
                        <h4 class="card-title mt-1">Thông tin sản phẩm</h4>
                        <h4 class="badge bg-success text-light fs-14 py-1 px-2 ms-2">
                            @Html.DisplayTextFor(m => m.TrangThaiDuyet)
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.TenSanPham, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.TenSanPham, new { @class = "form-control" })
                                </div>

                            </div>
                            <div class="col-lg-6">
                                @Html.LabelFor(m => m.MaDanhMuc, new { @class = "form-label" })
                                @Html.DropDownListFor(m => m.MaDanhMuc, Model.DanhMuc, "Chọn danh mục", new
                                {
                                   @class = "form-control",
                                   @data_choices = "true",
                                   @data_choices_groups = "true",
                                   @data_placeholder = "Chọn danh mục"
                                })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">

                                <div class="mb-3">
                                    @Html.LabelFor(m => m.NgayTao, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.NgayTao, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">

                                <div class="mb-3">
                                    @Html.LabelFor(m => m.NgayCapNhat, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.NgayCapNhat, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.NguoiTao, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.NguoiTao, new { @class = "form-control", @readonly = "" })
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.TrangThaiDuyet, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.TrangThaiDuyet, new { @class = "form-control", @readonly = "", })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.NguoiDuyet, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.NguoiDuyet, new { @class = "form-control", @readonly = "" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.NgayDuyet, new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.NgayDuyet, new { @class = "form-control", @readonly = "" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.MoTaNgan, new { @class = "form-label" })
                                    @Html.TextAreaFor(m => m.MoTaNgan, new { @class = "form-control bg-light-subtle", @rows = "7" })
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.MoTaDai, new { @class = "form-label" })
                                    @Html.TextAreaFor(m => m.MoTaDai, new { @class = "form-control bg-light-subtle", @rows = "7" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title mb-0">Thông tin nguyên liệu</h4>
                        </div>
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" id="ingredientDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Chọn nguyên liệu
                                    </button>
                                    <ul class="dropdown-menu " aria-labelledby="ingredientDropdown" id="ingredient-dropdown-menu">
                                    </ul>
                                </div>
                            </div>
                            <ul class="list-group" id="selected-ingredients-list" style="max-height: 16rem;overflow-y: auto;">
                            </ul>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title">Thông tin giá bán/khuyến mãi</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-lg-4">

                                    @Html.LabelFor(m => m.GiaGoc, new { @class = "form-label" })

                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bx-dollar'></i></span>
                                        @Html.TextBoxFor(m => m.GiaGoc, new { @class = "form-control", @type = "number" })
                                    </div>

                                </div>
                                <div class="col-lg-4">

                                    @Html.LabelFor(m => m.KhuyenMai, new { @class = "form-label" })
                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bxs-discount'></i></span>
                                        @Html.TextBoxFor(m => m.KhuyenMai, new { @class = "form-control", @type = "number" })
                                    </div>

                                </div>
                                <div class="col-lg-4">

                                    @Html.LabelFor(m => m.GiaSauKhuyenMai, new { @class = "form-label" })
                                    <div class="input-group mb-3">
                                        <span class="input-group-text fs-20"><i class='bx bxs-file-txt'></i></span>
                                        @Html.TextBoxFor(m => m.GiaSauKhuyenMai, new { @class = "form-control", @readonly = "true", @disabled = "true", @type = "number" })
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="p-3 bg-light mb-3 rounded">
                        <div class="row justify-content-end g-2">
                            <div class="col-3">
                                <a href="@ViewBag.ReturnURL" class="btn btn-outline-secondary w-100">Quay lại</a>
                            </div>
                            <div class="col-3">
                                <button type="submit" id="luuThayDoi" class="btn btn-primary w-100">Lưu thay đổi</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



        </div>
    </div>
    <!-- End Container Fluid -->
}

<script>
    const donViTinhList = ["cái"];
    const menuDropdownNguyenLieu = $('#ingredient-dropdown-menu');
    const danhSachNguyenLieuDuocChon = $('#selected-ingredients-list');
    const productId = $("#MaSanPham").val();

    function layNguyenLieuSanPhamHienCo() {
        $.ajax({
            url: "@Url.Action("GetByProductID", "Ingredient", new { area = "Admin", @productId = maSanPham })",
            method: 'GET',
            dataType: 'json',
            success: function (ingredients) {
                $.each(ingredients, function (index, ingredient) {
                    const itemDanhSach = $(`
                        <li class="list-group-item d-flex justify-content-between align-items-center" id="ingredient-${ingredient.MaNguyenLieu}">
                            <div>
                                <h5 class="mb-1">${ingredient.TenNguyenLieu}</h5>
                                <p class="mb-1">${ingredient.MoTa}</p>
                            </div>
                            <div class="d-flex align-items-center">
                                <input type="text" class="form-control form-control-sm input-so-luong me-2" value="${ingredient.SoLuongCan}" placeholder="Số lượng">
                                <select class="form-select form-select-sm me-2 don-vi-tinh" aria-label="Đơn vị tính">
                                    ${donViTinhList.map(donVi => `<option value="${donVi}" ${donVi === ingredient.DonViTinh ? 'selected' : ''}>${donVi}</option>`).join('')}
                                </select>
                                <button class="btn btn-outline-danger btn-sm btn-xoa">Xóa</button>
                            </div>
                        </li>
                    `);
                    danhSachNguyenLieuDuocChon.append(itemDanhSach);
                    disableDropdownItem(ingredient.MaNguyenLieu);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Lỗi khi lấy nguyên liệu sản phẩm:', textStatus, errorThrown);
            }
        });
    }

    function layNguyenLieu() {
        $.ajax({
            url: "@Url.Action("Get", "Ingredient", new { area = "Admin" })",
            method: 'GET',
            dataType: 'json',
            success: function (nguyenLieuList) {
                $.each(nguyenLieuList, function (index, nguyenLieu) {
                    const itemDropdown = $('<li></li>').append(`
                        <a class="dropdown-item" href="#" data-id="${nguyenLieu.MaNguyenLieu}" data-name="${nguyenLieu.TenNguyenLieu}" data-description="${nguyenLieu.MoTa}">
                            ${nguyenLieu.TenNguyenLieu}
                        </a>
                    `);
                    menuDropdownNguyenLieu.append(itemDropdown);
                });
                updateDropdownState();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Lỗi khi lấy nguyên liệu:', textStatus, errorThrown);
            }
        });
    }

    function disableDropdownItem(maNguyenLieu) {
        menuDropdownNguyenLieu.find(`a[data-id="${maNguyenLieu}"]`).addClass('disabled').css('pointer-events', 'none');
    }

    function enableDropdownItem(maNguyenLieu) {
        menuDropdownNguyenLieu.find(`a[data-id="${maNguyenLieu}"]`).removeClass('disabled').css('pointer-events', 'auto');
    }

    function updateDropdownState() {
        $('#selected-ingredients-list .list-group-item').each(function () {
            const maNguyenLieuCode = $(this).attr('id').split('-')[1];
            disableDropdownItem(maNguyenLieuCode);
        });
    }

    function changeMode(mode) {
        if (mode === "edit") {
            $("input").removeAttr("readonly disabled");
        }
    }

    $(document).ready(() => {
        $("#GiaGoc, #KhuyenMai").on("change keyup", function () {
            const giaGoc = parseInt($("#GiaGoc").val()) || 0;
            const khuyenMai = parseInt($("#KhuyenMai").val()) || 0;
            const discountAmount = (khuyenMai / 100) * giaGoc;
            const giaSauKhuyenMai = giaGoc - discountAmount;
            $("#GiaSauKhuyenMai").val(giaSauKhuyenMai);
        });

        let isEditable = false;
        $('#toggleButton').on('click', function () {
            isEditable = !isEditable;
            if (isEditable) {
                $("form input").prop('disabled', false);
                $('form #luuThayDoi').prop('disabled', false);
                $(this).text('Khóa chỉnh sửa').removeClass('btn-primary').addClass('btn-secondary');
            } else {
                $("form input").prop('disabled', true);
                $('form #luuThayDoi').prop('disabled', true);
                $(this).text('Chế độ chỉnh sửa').removeClass('btn-secondary').addClass('btn-primary');
            }
        });

        layNguyenLieuSanPhamHienCo();
        layNguyenLieu();

        menuDropdownNguyenLieu.on('click', 'a', function (event) {
            event.preventDefault();
            const maNguyenLieu = $(this).data('id');
            const tenNguyenLieu = $(this).data('name');
            const moTaNguyenLieu = $(this).data('description');

            if ($('#ingredient-' + maNguyenLieu).length === 0) {
                const itemDanhSach = $(`
                    <li class="list-group-item d-flex justify-content-between align-items-center" id="ingredient-${maNguyenLieu}">
                        <div>
                            <h5 class="mb-1">${tenNguyenLieu}</h5>
                            <p class="mb-1">${moTaNguyenLieu}</p>
                        </div>
                        <div class="d-flex align-items-center">
                            <input type="text" class="form-control form-control-sm input-so-luong me-2" value="1" placeholder="Số lượng">
                            <select class="form-select form-select-sm me-2 don-vi-tinh" aria-label="Đơn vị tính">
                                ${donViTinhList.map(donVi => `<option value="${donVi}">${donVi}</option>`).join('')}
                            </select>
                            <button class="btn btn-outline-danger btn-sm btn-xoa">Xóa</button>
                        </div>
                    </li>
                `);
                danhSachNguyenLieuDuocChon.append(itemDanhSach);
                disableDropdownItem(maNguyenLieu);
            } else {
                alert("Nguyên liệu đã có trong danh sách.");
            }
        });

        danhSachNguyenLieuDuocChon.on('change', '.don-vi-tinh', function () {
            const selectedUnit = $(this).val();
            $(this).closest('.list-group-item').data('donViTinh', selectedUnit);
        });

        danhSachNguyenLieuDuocChon.on('click', '.btn-xoa', function () {
            const maNguyenLieuCode = $(this).closest('.list-group-item').attr('id').split('-')[1];
            $(this).closest('.list-group-item').remove();
            enableDropdownItem(maNguyenLieuCode);
            updateDropdownState();
        });

        $('#productForm').on('submit', function (e) {
            e.preventDefault();
            const formData = new FormData();
            const duLieuFormArray = $(this).serializeArray();

            $.each(duLieuFormArray, function (index, item) {
                formData.append(`SanPham.${item.name}`, item.value);
            });

            const antiForgeryToken = $('#productForm input[name="__RequestVerificationToken"]').val();
            formData.append("__RequestVerificationToken", antiForgeryToken);

            $('#selected-ingredients-list .list-group-item').each(function () {
                const maNguyenLieuCode = $(this).attr('id').split('-')[1];
                let soLuong = parseInt($(this).find('.input-so-luong').val(), 10);
                soLuong = isNaN(soLuong) ? 0 : soLuong;
                const donViTinh = $(this).find('.don-vi-tinh').val();

                formData.append("DanhSachNguyenLieu[0].MaNguyenLieu", maNguyenLieuCode);
                formData.append("DanhSachNguyenLieu[0].SoLuong", soLuong);
                formData.append("DanhSachNguyenLieu[0].DonViTinh", donViTinh);
            });

            const hinhAnh = $('#HinhAnh')[0].files;
            for (let i = 0; i < hinhAnh.length; i++) {
                formData.append("HinhAnh", hinhAnh[i]);
            }

            for (let pair of formData.entries()) {
                console.log(pair[0] + ': ' + pair[1]);
            }

            $.ajax({
                url: '@Url.Action("Detail", "Product", new { area = "Admin" })',
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    alertMessage(response.message, response.type);
                    if (response.success) {
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    }
                },
                error: function (jqXHR) {
                    alertMessage("Đã xảy ra lỗi khi gửi dữ liệu!", "red");
                }
            });
        });

        $(".remove-image-btn").click(function () {
            var imagePath = $(this).data("image-url");
            var productId = $(this).data("product-id");

            $.ajax({
                url: '@Url.Action("RemoveImage", "Product", new { area = "Admin" })',
                type: 'POST',
                data: {
                    productId: productId,
                    imagePath: imagePath
                },
                success: function (response) {
                    alertMessage(response.type, response.message);
                    location.reload();
                },
                error: function () {
                    alert("Có lỗi xảy ra khi gửi yêu cầu.");
                }
            });
        });

        $('#HinhAnh').on('change', function () {
            let files = this.files;
            let carouselInner = $('.carousel-inner');

            carouselInner.find('.carousel-item.active').removeClass('active');

            for (let i = 0; i < files.length; i++) {
                let reader = new FileReader();

                reader.onload = function (e) {
                    let carouselItem = $('<div>').addClass('carousel-item');
                    let img = $('<img>').attr('src', e.target.result).addClass('d-block w-100').attr('alt', 'img');

                    carouselItem.append(img);

                    if (i === 0) {
                        carouselItem.addClass('active');
                    }

                    carouselInner.append(carouselItem);
                };

                reader.readAsDataURL(files[i]);
            }
        });
    });
</script>



